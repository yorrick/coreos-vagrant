#cloud-config

---
coreos:
  etcd:
    discovery: https://discovery.etcd.io/65ff5cca204e273d74ac9838de731775
    addr: $public_ipv4:4001
    peer-addr: $public_ipv4:7001
  fleet:
    public-ip: $public_ipv4
  units:
  - name: etcd.service
    command: start
  - name: fleet.service
    command: start
  - name: docker-tcp.socket
    command: start
    enable: true
    content: |
      [Unit]
      Description=Docker Socket for the API

      [Socket]
      ListenStream=2375
      Service=docker.service
      BindIPv6Only=both

      [Install]
      WantedBy=sockets.target
  - name: database.service
    command: start
    enable: true
    content: |
      [Unit]
      Description=Postgres database
      After=docker-tcp.socket
      Requires=docker-tcp.socket

      [Service]
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker kill database-01
      ExecStartPre=-/usr/bin/docker rm database-01
      ExecStartPre=/usr/bin/docker pull yorrick/database
      ExecStart=/usr/bin/docker run --name database-01 -p 5432:5432 yorrick/database
  - name: database-discovery.service
    command: start
    enable: true
    content: |
      [Unit]
      Description=Announce database
      BindsTo=database.service

      [Service]
      ExecStart=/bin/sh -c "while true; do etcdctl set /services/database '{ \"host\": \"%H\", \"port\": 5432, \"version\": \"52c7248a14\" }' --ttl 60; sleep 45; done"
      ExecStop=/usr/bin/etcdctl rm /services/database

      [X-Fleet]
      X-ConditionMachineOf=database.service
  - name: application.service
    command: start
    enable: true
    content: |
      [Unit]
      Description=Flask application
      After=database.service
      Requires=database.service

      [Service]
      TimeoutStartSec=0
      ExecStartPre=-/usr/bin/docker kill application-01
      ExecStartPre=-/usr/bin/docker rm application-01
      ExecStartPre=/usr/bin/docker pull yorrick/application
      ExecStart=/usr/bin/docker run --name application-01 -p 80:80 yorrick/application

      [X-Fleet]
      Conflicts=wsgi@*.service
      MachineOf=database.service
